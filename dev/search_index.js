var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MutatingOrNot","category":"page"},{"location":"#MutatingOrNot","page":"Home","title":"MutatingOrNot","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MutatingOrNot.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MutatingOrNot]","category":"page"},{"location":"#MutatingOrNot.similar-Tuple{Any, Any}","page":"Home","title":"MutatingOrNot.similar","text":"xx = similar(y, x)\n\nConvenience function that replaces more concisely:\n\nif x::Void\n    xx = similar(y)\nelse\n    xx = x\nend\n\nThe goal is to allocate xx only when a pre-allocated x is not provided. Furthermore similar(y) applies recursively to tuples and named tuples. Contrary to Base.similar, it is not possible to specify eltype or dims.\n\n\n\n\n\n","category":"method"}]
}
